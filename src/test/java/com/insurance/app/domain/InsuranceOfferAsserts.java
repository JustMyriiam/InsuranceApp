package com.insurance.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsuranceOfferAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceOfferAllPropertiesEquals(InsuranceOffer expected, InsuranceOffer actual) {
        assertInsuranceOfferAutoGeneratedPropertiesEquals(expected, actual);
        assertInsuranceOfferAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceOfferAllUpdatablePropertiesEquals(InsuranceOffer expected, InsuranceOffer actual) {
        assertInsuranceOfferUpdatableFieldsEquals(expected, actual);
        assertInsuranceOfferUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceOfferAutoGeneratedPropertiesEquals(InsuranceOffer expected, InsuranceOffer actual) {
        assertThat(actual)
            .as("Verify InsuranceOffer auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceOfferUpdatableFieldsEquals(InsuranceOffer expected, InsuranceOffer actual) {
        assertThat(actual)
            .as("Verify InsuranceOffer relevant properties")
            .satisfies(a -> assertThat(a.getOfferId()).as("check offerId").isEqualTo(expected.getOfferId()))
            .satisfies(a -> assertThat(a.getOfferName()).as("check offerName").isEqualTo(expected.getOfferName()))
            .satisfies(a -> assertThat(a.getPrice()).as("check price").isEqualTo(expected.getPrice()))
            .satisfies(a -> assertThat(a.getCoverageDetails()).as("check coverageDetails").isEqualTo(expected.getCoverageDetails()))
            .satisfies(a -> assertThat(a.getTermsAndConditions()).as("check termsAndConditions").isEqualTo(expected.getTermsAndConditions())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceOfferUpdatableRelationshipsEquals(InsuranceOffer expected, InsuranceOffer actual) {
        assertThat(actual)
            .as("Verify InsuranceOffer relationships")
            .satisfies(a -> assertThat(a.getContract()).as("check contract").isEqualTo(expected.getContract()));
    }
}
