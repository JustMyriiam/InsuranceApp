package com.insurance.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class DocumentSinisterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentSinisterAllPropertiesEquals(DocumentSinister expected, DocumentSinister actual) {
        assertDocumentSinisterAutoGeneratedPropertiesEquals(expected, actual);
        assertDocumentSinisterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentSinisterAllUpdatablePropertiesEquals(DocumentSinister expected, DocumentSinister actual) {
        assertDocumentSinisterUpdatableFieldsEquals(expected, actual);
        assertDocumentSinisterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentSinisterAutoGeneratedPropertiesEquals(DocumentSinister expected, DocumentSinister actual) {
        assertThat(actual)
            .as("Verify DocumentSinister auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentSinisterUpdatableFieldsEquals(DocumentSinister expected, DocumentSinister actual) {
        assertThat(actual)
            .as("Verify DocumentSinister relevant properties")
            .satisfies(a -> assertThat(a.getDocumentId()).as("check documentId").isEqualTo(expected.getDocumentId()))
            .satisfies(a -> assertThat(a.getDocumentName()).as("check documentName").isEqualTo(expected.getDocumentName()))
            .satisfies(a -> assertThat(a.getIssueDate()).as("check issueDate").isEqualTo(expected.getIssueDate()))
            .satisfies(a -> assertThat(a.getExpiryDate()).as("check expiryDate").isEqualTo(expected.getExpiryDate()))
            .satisfies(a -> assertThat(a.getAssociatedSinister()).as("check associatedSinister").isEqualTo(expected.getAssociatedSinister())
            );
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertDocumentSinisterUpdatableRelationshipsEquals(DocumentSinister expected, DocumentSinister actual) {
        // empty method
    }
}
