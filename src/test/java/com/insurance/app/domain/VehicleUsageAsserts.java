package com.insurance.app.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleUsageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAllPropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertVehicleUsageAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleUsageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAllUpdatablePropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertVehicleUsageUpdatableFieldsEquals(expected, actual);
        assertVehicleUsageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAutoGeneratedPropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(actual)
            .as("Verify VehicleUsage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageUpdatableFieldsEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(actual)
            .as("Verify VehicleUsage relevant properties")
            .satisfies(a -> assertThat(a.getUsageType()).as("check usageType").isEqualTo(expected.getUsageType()))
            .satisfies(a -> assertThat(a.getAnnualMileage()).as("check annualMileage").isEqualTo(expected.getAnnualMileage()))
            .satisfies(a -> assertThat(a.getCommercialUse()).as("check commercialUse").isEqualTo(expected.getCommercialUse()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageUpdatableRelationshipsEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(actual)
            .as("Verify VehicleUsage relationships")
            .satisfies(a -> assertThat(a.getCar()).as("check car").isEqualTo(expected.getCar()));
    }
}
